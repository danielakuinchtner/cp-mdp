import matplotlib.pyplot as plt


states = ['512 (9D)','625 (2D)', '800 (7D)', '1000 (3D)','1024 (5D)',
          '2048 (7D)', '3125 (5D)','3888 (9D)','4000 (3D)', '4900 (2D)',
          '5184 (7D)', '5832 (9D)', '7000 (5D)', '8000 (3D)','8748 (9D)',
          '9216 (7D)','9216 (9D)','10000 (2D)','10000 (5D)','10368 (7D)',
          '12500 (3D)', '12500 (5D)', '14400 (2D)','18750 (3D)','19600 (2D)',
          '19200 (5D)','22500 (2D)','22500 (4D)','24000 (3D)', '27000 (6D)',
           '60000 (3D)','67500 (4D)','86436 (6D)','90000 (2D)', '100000 (5D)',
          '125000 (3D)','160000 (4D)','200000 (5D)','250000 (2D)',  '262144 (6D)',
            '512000 (3D)','531441 (6D)','540000 (4D)', '600000 (5D)','640000 (2D)',
          '1000000 (2D)', '1000000 (3D)','1000000 (6D)','1200000 (4D)','1200000 (5D)'
          ]
values_tensor = [5.45,0.48,		5.02,1.24,	2.74,
                  13.26,	11.28,	44.63,7.67, 5.84,
                 34.74,66.21	, 26.09,15.23,99.17	,
                 62.89,	106.02	,	16.11,	37.61,71.75,
                 26.93, 46.68,31.56, 40.93, 42.75,
                 76.36, 48.26,65.55,51.69,		145.70,
                 149.88,226.06,502.35,215.35,	436.89,
                 327.92,	531.71	,855.01	,586.95,	1409.57,
                 1933.44,	3340.10,1933.90,		2750.91,1573.36,
                 2422.61,	3808.04	,5895.82,5091.37,	5863.61]
values_tabular = [4.48,	0.28,	4.15, 0.98, 2.56,
                  23.35,	15.88, 80.75,9.88, 13.12,
                  58.79,	123.22, 44.55,34.82, 299.27,
                  169.30	,307.20,	51.35, 96.79, 190.59,
                  66.93,	128.32, 123.40,109.49, 253.75]

import matplotlib.pyplot as plt
plt.plot(states, values_tensor, values_tabular)
plt.ylabel('runtime (seconds)')
plt.xlabel('number of states')
plt.xticks(rotation=90)
plt.show()

plt.savefig('runtime-cp-tabular-all.pdf')


import matplotlib.pyplot as plt


states = ['512 (9D)','625 (2D)', '800 (7D)', '1000 (3D)','1024 (5D)',
          '2048 (7D)', '3125 (5D)','3888 (9D)','4000 (3D)', '4900 (2D)',
          '5184 (7D)', '5832 (9D)', '7000 (5D)', '8000 (3D)','8748 (9D)',
          '9216 (7D)','9216 (9D)','10000 (2D)','10000 (5D)','10368 (7D)',
          '12500 (3D)', '12500 (5D)', '14400 (2D)','18750 (3D)','19600 (2D)',
          '19200 (5D)','22500 (2D)','22500 (4D)','24000 (3D)', '27000 (6D)',
           '60000 (3D)','67500 (4D)','86436 (6D)','90000 (2D)', '100000 (5D)',
          '125000 (3D)','160000 (4D)','200000 (5D)','250000 (2D)',  '262144 (6D)',
            '512000 (3D)','531441 (6D)','540000 (4D)', '600000 (5D)','640000 (2D)',
          '1000000 (2D)', '1000000 (3D)','1000000 (6D)','1200000 (4D)','1200000 (5D)'
          ]
values_tensor = [5.45,0.48,		5.02,1.24,	2.74,
                  13.26,	11.28,	44.63,7.67, 5.84,
                 34.74,66.21	, 26.09,15.23,99.17	,
                 62.89,	106.02	,	16.11,	37.61,71.75,
                 26.93, 46.68,31.56, 40.93, 42.75,
                 76.36, 48.26,65.55,51.69,		145.70,
                 149.88,226.06,502.35,215.35,	436.89,
                 327.92,	531.71	,855.01	,586.95,	1409.57,
                 1933.44,	3340.10,1933.90,		2750.91,1573.36,
                 2422.61,	3808.04	,5895.82,5091.37,	5863.61]
values_tabular = [4.48,	0.28,	4.15, 0.98, 2.56,
                  23.35,	15.88, 80.75,9.88, 13.12,
                  58.79,	123.22, 44.55,34.82, 299.27,
                  169.30	,307.20,	51.35, 96.79, 190.59,
                  66.93,	128.32, 123.40,109.49, 253.75]

import matplotlib.pyplot as plt
plt.plot(states, values_tensor, values_tabular,"--")
plt.ylabel('runtime (seconds)')
plt.xlabel('number of states')
plt.xticks(rotation=90)
plt.ylim(top=2000)
plt.ylim(bottom=0)
plt.show()

plt.savefig('runtime-cp-tabular-all-limited.pdf')




import matplotlib.pyplot as plt


states = ['512 (9D)','625 (2D)', '800 (7D)', '1000 (3D)','1024 (5D)',
          '2048 (7D)', '3125 (5D)','3888 (9D)','4000 (3D)', '4900 (2D)',
          '5184 (7D)', '5832 (9D)', '7000 (5D)', '8000 (3D)','8748 (9D)',
          '9216 (7D)','9216 (9D)','10000 (2D)','10000 (5D)','10368 (7D)',
          '12500 (3D)', '12500 (5D)', '14400 (2D)','18750 (3D)','19600 (2D)'
          ]

memory_tensor = [133.89, 131.54, 133.98,132.72,132.24,
                 141.17,139.22,169.24, 133.79,133.99,
                 161.14, 189.78,150.68,138.29,218.82,
                 180.65, 226.70,141.66,160.07,194.09,
                 142.94,168.42,145.11,151.02,151.33]

memory_tabular = [163.33, 160.66, 197.11,174.11, 209.92,
                  595.76,907.58, 2304.49, 894.29,902.71,
                  3138.97,5029.51,4050.28,3202.27,11157.96,
                  9648.82, 12368.83,3336.00,8135.09,12178.07,
                  7636.52,12639.80,6780.85,10941.84,12453.95 ]

runtime_tensor = [5.45,0.48,		5.02,1.24,	2.74,
                  13.26,	11.28,	44.63,7.67, 5.84,
                 34.74,66.21	, 26.09,15.23,99.17	,
                 62.89,	106.02	,	16.11,	37.61,71.75,
                 26.93, 46.68,31.56, 40.93, 42.75,]
runtime_tabular = [4.48,	0.28,	4.15, 0.98, 2.56,
                  23.35,	15.88, 80.75,9.88, 13.12,
                  58.79,	123.22, 44.55,34.82, 299.27,
                  169.30	,307.20,	51.35, 96.79, 190.59,
                  66.93,	128.32, 123.40,109.49, 253.75]




import matplotlib.pyplot as plt
fig, ax = plt.subplots(constrained_layout=True)
ax.plot(states, runtime_tensor, "b",runtime_tabular, "r")
ax.set_ylabel('runtime (seconds)')
ax.set_ylabel('number of states')
plt.xticks(rotation=90)

memory = ax.secondary_yaxis('right')
memory.set_ylabel('memory (MB)')
#ax.set_title('Runtime (seconds) and Memory (MB)')
ax.plot(states, memory_tensor, "b--", memory_tabular, "r--")

plt.ylim(top=800)
plt.ylim(bottom=0)


plt.show()

fig.savefig('runtime-memory-cp-tabular.pdf')



import matplotlib.pyplot as plt


states = ['512 (9D)','625 (2D)', '800 (7D)', '1000 (3D)','1024 (5D)',
          '2048 (7D)', '3125 (5D)','3888 (9D)','4000 (3D)', '4900 (2D)',
          '5184 (7D)', '5832 (9D)', '7000 (5D)', '8000 (3D)','8748 (9D)',
          '9216 (7D)','9216 (9D)','10000 (2D)','10000 (5D)','10368 (7D)',
          '12500 (3D)', '12500 (5D)', '14400 (2D)','18750 (3D)','19600 (2D)'
]

runtime_tensor = [5.45,0.48,		5.02,1.24,	2.74,
                  13.26,	11.28,	44.63,7.67, 5.84,
                 34.74,66.21	, 26.09,15.23,99.17	,
                 62.89,	106.02	,	16.11,	37.61,71.75,
                 26.93, 46.68,31.56, 40.93, 42.75,]
runtime_tabular = [4.48,	0.28,	4.15, 0.98, 2.56,
                  23.35,	15.88, 80.75,9.88, 13.12,
                  58.79,	123.22, 44.55,34.82, 299.27,
                  169.30	,307.20,	51.35, 96.79, 190.59,
                  66.93,	128.32, 123.40,109.49, 253.75]




import matplotlib.pyplot as plt
fig, ax = plt.subplots(constrained_layout=True)
ax.plot(states, runtime_tensor, "b",runtime_tabular, "r")
ax.set_ylabel('runtime (seconds)')
ax.set_xlabel('number of states')
plt.xticks(rotation=90)



plt.ylim(top=300)
plt.ylim(bottom=0)


plt.show()

fig.savefig('runtime-cp-tabular.pdf')




import matplotlib.pyplot as plt


states = ['512 (9D)','625 (2D)', '800 (7D)', '1000 (3D)','1024 (5D)',
          '2048 (7D)', '3125 (5D)','3888 (9D)','4000 (3D)', '4900 (2D)',
          '5184 (7D)', '5832 (9D)', '7000 (5D)', '8000 (3D)','8748 (9D)',
          '9216 (7D)','9216 (9D)','10000 (2D)','10000 (5D)','10368 (7D)',
          '12500 (3D)', '12500 (5D)', '14400 (2D)','18750 (3D)','19600 (2D)'
          ]

memory_tensor = [133.89, 131.54, 133.98,132.72,132.24,
                 141.17,139.22,169.24, 133.79,133.99,
                 161.14, 189.78,150.68,138.29,218.82,
                 180.65, 226.70,141.66,160.07,194.09,
                 142.94,168.42,145.11,151.02,151.33]

memory_tabular = [163.33, 160.66, 197.11,174.11, 209.92,
                  595.76,907.58, 2304.49, 894.29,902.71,
                  3138.97,5029.51,4050.28,3202.27,11157.96,
                  9648.82, 12368.83,3336.00,8135.09,12178.07,
                  7636.52,12639.80,6780.85,10941.84,12453.95 ]





import matplotlib.pyplot as plt
fig, ax = plt.subplots(constrained_layout=True)
ax.plot(states, memory_tensor, "b",memory_tabular, "r")
ax.set_ylabel('memory (MB)')
ax.set_xlabel('number of states')
plt.xticks(rotation=90)

plt.ylim(top=5000)
plt.ylim(bottom=0)


plt.show()

fig.savefig('memory-cp-tabular-limited.pdf')





import matplotlib.pyplot as plt


states = [
          '19200 (5D)','22500 (2D)','22500 (4D)','24000 (3D)', '27000 (6D)',
           '60000 (3D)','67500 (4D)','86436 (6D)','90000 (2D)', '100000 (5D)',
          '125000 (3D)','160000 (4D)','200000 (5D)','250000 (2D)',  '262144 (6D)',
            '512000 (3D)','531441 (6D)','540000 (4D)', '600000 (5D)','640000 (2D)',
          '1000000 (2D)', '1000000 (3D)','1000000 (6D)','1200000 (4D)','1200000 (5D)'
          ]
values_tensor = [
                 76.36, 48.26,65.55,51.69,		145.70,
                 149.88,226.06,502.35,215.35,	436.89,
                 327.92,	531.71	,855.01	,586.95,	1409.57,
                 1933.44,	3340.10,1933.90,		2750.91,1573.36,
                 2422.61,	3808.04	,5895.82,5091.37,	5863.61]


import matplotlib.pyplot as plt
plt.plot(states, values_tensor)
plt.ylabel('runtime (seconds)')
plt.xlabel('number of states')
plt.xticks(rotation=90)
plt.show()

fig.savefig('runtime-only-cp.pdf')






import matplotlib.pyplot as plt


states = [
          '19200 (5D)','22500 (2D)','22500 (4D)','24000 (3D)', '27000 (6D)',
           '60000 (3D)','67500 (4D)','86436 (6D)','90000 (2D)', '100000 (5D)',
          '125000 (3D)','160000 (4D)','200000 (5D)','250000 (2D)',  '262144 (6D)',
            '512000 (3D)','531441 (6D)','540000 (4D)', '600000 (5D)','640000 (2D)',
          '1000000 (2D)', '1000000 (3D)','1000000 (6D)','1200000 (4D)','1200000 (5D)'
          ]
runtime_tensor = [
                 76.36, 48.26,65.55,51.69,		145.70,
                 149.88,226.06,502.35,215.35,	436.89,
                 327.92,	531.71	,855.01	,586.95,	1409.57,
                 1933.44,	3340.10,1933.90,		2750.91,1573.36,
                 2422.61,	3808.04	,5895.82,5091.37,	5863.61]
memory_tensor = [
               184.46, 154.85,171.29,157.41,254.64,
                 211.53,260.27,516.58,246.07,447.32,
                 302.22,475.77,758.86,458.64,1220.27,
                 975.83,2458.37,1400.19,	2198.21,978.44,
                 1455.18,1818.77,5167.42,3091.44,3857.17
              ]

import matplotlib.pyplot as plt
fig, ax = plt.subplots(constrained_layout=True)
ax.plot(states, runtime_tensor, "b")
ax.set_ylabel('runtime (seconds)')
ax.set_xlabel('number of states')
plt.xticks(rotation=90)

memory = ax.secondary_yaxis('right')
memory.set_ylabel('memory (MB)')
#ax.set_title('Runtime (seconds) and Memory (MB)')
ax.plot(states,memory_tensor, "b--")

plt.ylim(top=6000)
plt.ylim(bottom=0)

plt.show()

fig.savefig('runtime-memory-only-cp.pdf')

import matplotlib.pyplot as plt

states = ['512 (9D)', '625 (2D)', '800 (7D)', '1000 (3D)', '1024 (5D)',
          '2048 (7D)', '3125 (5D)', '3888 (9D)', '4000 (3D)', '4900 (2D)',
          '5184 (7D)', '5832 (9D)', '7000 (5D)', '8000 (3D)', '8748 (9D)',
          '9216 (7D)', '9216 (9D)', '10000 (2D)', '10000 (5D)', '10368 (7D)',
          '12500 (3D)', '12500 (5D)', '14400 (2D)', '18750 (3D)', '19600 (2D)',

          '19200 (5D)', '22500 (2D)', '22500 (4D)', '24000 (3D)', '27000 (6D)',
          '60000 (3D)', '67500 (4D)', '86436 (6D)', '90000 (2D)', '100000 (5D)',
          '125000 (3D)', '160000 (4D)', '200000 (5D)', '250000 (2D)', '262144 (6D)',
          '512000 (3D)', '531441 (6D)', '540000 (4D)', '600000 (5D)', '640000 (2D)',
          '1000000 (2D)', '1000000 (3D)', '1000000 (6D)', '1200000 (4D)', '1200000 (5D)'
          ]
runtime_tensor = [5.45, 0.48, 5.02, 1.24, 2.74,
                  13.26, 11.28, 44.63, 7.67, 5.84,
                  34.74, 66.21, 26.09, 15.23, 99.17,
                  62.89, 106.02, 16.11, 37.61, 71.75,
                  26.93, 46.68, 31.56, 40.93, 42.75,

                  76.36, 48.26, 65.55, 51.69, 145.70,
                  149.88, 226.06, 502.35, 215.35, 436.89,
                  327.92, 531.71, 855.01, 586.95, 1409.57,
                  1933.44, 3340.10, 1933.90, 2750.91, 1573.36,
                  2422.61, 3808.04, 5895.82, 5091.37, 5863.61]

memory_tensor = [133.89, 131.54, 133.98, 132.72, 132.24,
                 141.17, 139.22, 169.24, 133.79, 133.99,
                 161.14, 189.78, 150.68, 138.29, 218.82,
                 180.65, 226.70, 141.66, 160.07, 194.09,
                 142.94, 168.42, 145.11, 151.02, 151.33,

                 184.46, 154.85, 171.29, 157.41, 254.64,
                 211.53, 260.27, 516.58, 246.07, 447.32,
                 302.22, 475.77, 758.86, 458.64, 1220.27,
                 975.83, 2458.37, 1400.19, 2198.21, 978.44,
                 1455.18, 1818.77, 5167.42, 3091.44, 3857.17]

memory_tabular = [163.33, 160.66, 197.11, 174.11, 209.92,
                  595.76, 907.58, 2304.49, 894.29, 902.71,
                  3138.97, 5029.51, 4050.28, 3202.27, 11157.96,
                  9648.82, 12368.83, 3336.00, 8135.09, 12178.07,
                  7636.52, 12639.80, 6780.85, 10941.84, 12453.95]

runtime_tabular = [4.48, 0.28, 4.15, 0.98, 2.56,
                   23.35, 15.88, 80.75, 9.88, 13.12,
                   58.79, 123.22, 44.55, 34.82, 299.27,
                   169.30, 307.20, 51.35, 96.79, 190.59,
                   66.93, 128.32, 123.40, 109.49, 253.75]

import matplotlib.pyplot as plt

fig, ax = plt.subplots(constrained_layout=True)
ax.plot(states, runtime_tensor, "b", runtime_tabular, "r")
ax.set_ylabel('runtime (seconds)')
ax.set_xlabel('number of states')
plt.xticks(rotation=90)

memory = ax.secondary_yaxis('right')
memory.set_ylabel('memory (MB)')
# ax.set_title('Runtime (seconds) and Memory (MB)')
ax.plot(states, memory_tensor, "b--", memory_tabular, "r--")

plt.ylim(top=13000)
plt.ylim(bottom=-200)

plt.show()

fig.savefig('runtime-memory-cp-tabular-all.pdf')